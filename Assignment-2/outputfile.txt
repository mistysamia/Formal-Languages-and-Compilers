[hd #include <math.h>][hd #include <stdio.h>][hd #include <string.h>][kw int][id main][par (][par )][par {][kw FILE][op *][id file][sep ;][kw char][id str[100]][sep ,][id save[100]][sep ,][id printoutput[100]][sep ,][id c][sep ;][kw int][id in][op =][num 0][sep ,][id singlecomment][op =][num 0][sep ,][id multicomment][op =][num 0][sep ,][id indx][op =][num 0][sep ;][id file][op =][id fopen][par (][sep "][unwn inputfile.txt][sep "][sep ,][sep "][unwn w][sep "][par )][sep ;][kw while][par (][num 1][par )][par {][id gets][par (][unwn str][par )][sep ;][kw if][par (][id strcmp][par (][id str][sep ,][sep "][unwn end][sep "][par )][op ==][num 0][par )][kw break][sep ;][id strcat][par (][id str][sep ,][sep "][unwn \n][sep "][par )][sep ;][id fputs][par (][id str][sep ,][unwn file][par )][sep ;][par }][id fclose][par (][unwn file][par )][sep ;][id file][op =][id fopen][par (][sep "][unwn inputfile.txt][sep "][sep ,][sep "][unwn r][sep "][par )][sep ;][kw while][par (][par (][id c][op =][id fgetc][par (][unwn file][par )][par )][op !=][kw EOF][par )][unwn save][par [][unwn in][op ++][par ]][op =][id c][sep ;][unwn save][par [][unwn in][op ++][par ]][op =][sep '][unwn \0][sep '][sep ;][id fclose][par (][unwn file][par )][sep ;][id file][op =][id fopen][par (][sep "][unwn outputfile.txt][sep "][sep ,][sep "][unwn w][sep "][par )][sep ;][unwn printoutput][par [][unwn indx][op ++][par ]][op =][id save[0]][sep ;][kw for][par (][kw int][id i][op =][num 1][sep ;][id i][op <][id in][sep ;][unwn i][op ++][par )][par {][kw if][par (][id save[i]][op ==][sep '][unwn /][sep '][op &&][id save[i][op +][num 1][par ]][op ==][sep '][unwn /][sep '][op &&][op !][id multicomment][op &&][id i][op <][id in][op -][num 1][par )][id singlecomment][op =][num 1][sep ;][kw if][par (][id save[i]][op ==][sep '][unwn \n][sep '][op &&][unwn singlecomment][par )][par {][id singlecomment][op =][num 0][sep ;][kw continue][sep ;][par }][kw if][par (][id save[i][op +][num 1][par ]][op ==][sep '][unwn *][sep '][op &&][id save[i]][op ==][sep '][unwn /][sep '][op &&][id i][op <][id in][op -][num 1][op &&][op !][id multicomment][op &&][op !][unwn singlecomment][par )][id multicomment][op =][num 1][sep ;][kw if][par (][id multicomment][op ==][num 2][par )][par {][id multicomment][op =][num 0][sep ;][kw continue][sep ;][par }][kw if][par (][id save[i][op +][num 1][par ]][op ==][sep '][unwn /][sep '][op &&][id save[i]][op ==][sep '][unwn *][sep '][op &&][id i][op <][id in][op -][num 1][op &&][unwn multicomment][par )][par {][id multicomment][op =][num 2][sep ;][kw continue][sep ;][par }][kw if][par (][op !][id multicomment][op &&][op !][id singlecomment][op &&][id save[i]][op !=][sep '][unwn \n][sep '][par )][unwn printoutput][par [][unwn indx][op ++][par ]][op =][id save[i]][sep ;][par }][id fputs][par (][id printoutput][sep ,][unwn file][par )][sep ;][id fclose][par (][unwn file][par )][sep ;][id file][op =][id fopen][par (][sep "][unwn outputfile.txt][sep "][sep ,][sep "][unwn r][sep "][par )][sep ;][kw while][par (][par (][id c][op =][id fgetc][par (][unwn file][par )][par )][op !=][kw EOF][par )][id printf][par (][sep "][unwn %c][sep "][sep ,][unwn c][par )][sep ;][id fclose][par (][unwn file][par )][sep ;][kw return][num 0][sep ;][par }]




/*



#include <math.h>
#include <stdio.h>
#include <string.h>


int main()
{
    char ch[1000];

    gets(ch);
    int flag1 =0,flag2=0,flag3=0,flag4=0;
    int i=0;
    if(ch[0]>='a' && 'z'>=ch[0])
    {
        i++;
    }
    else
    {
        printf("String rejected1\n");
        return 0;
    }
    if(ch[i]=='_')
    {
        i++;
        int one=0;
        for(; i<strlen(ch); i++)
        {
            if(ch[i]>='0' && ch[i]<='9')
            {
                one++;
            }
            else
            {
                printf("String rejected2\n");
                return 0;
            }
        }
        if(one==0)
        {
            printf("String rejected3\n");
            return 0;
        }
        else
        {
            printf("String Accepted\n");
            return 0;
        }
    }
    else if(ch[i]>='0' && ch[i]<='9')
    {
        int under=0;
        while(1)
        {
            if(ch[i]>='0' && ch[i]<='9')
            {
                i++;
            }
            else if(ch[i]=='_')
            {
                i++;
                under=1;
                break;
            }
            else
            {
                printf("String rejected4\n");
                return 0;
            }
        }
        if(under)
        {
            int one=0;
            for(; i<strlen(ch); i++)
            {
                if(ch[i]>='0' && ch[i]<='9')
                {
                    one++;
                }
                else
                {
                    printf("String rejected5\n");
                    return 0;
                }
            }
            if(one==0)
            {
                printf("String rejected6\n");
                return 0;
            }
            else
            {
                printf("String Accepted\n");
                return 0;
            }
        }
        else
        {
            printf("String rejected7\n");
            return 0;
        }

    }
    else
    {
        printf("String rejected8\n");
        return 0;
    }

}


*/
